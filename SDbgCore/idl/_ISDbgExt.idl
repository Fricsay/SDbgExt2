import "oaidl.idl";
import "ocidl.idl";
import "idl\_ClrTypes.idl";

interface IClrProcess;
typedef struct DctEntry
{
	CLRDATA_ADDRESS EntryPtr;
	CLRDATA_ADDRESS KeyPtr;
	CLRDATA_ADDRESS ValuePtr;
	ULONG32 HashCode;
} DctEntry;

typedef enum THREADPOOL_WORKITEM_TYPE 
{ 
	CB_TYPE_INVALID, 
	CB_TYPE_QUEUEUSERWORKITEM, 
	CB_TYPE_ASYNC_WORKITEM  
} THREADPOOL_WORKITEM_TYPE;

typedef struct ThreadPoolWorkItem
{
	CLRDATA_ADDRESS WorkItemPtr;
	CLRDATA_ADDRESS StatePtr;
	CLRDATA_ADDRESS DelegatePtr;
	CLRDATA_ADDRESS DelegateMethodDesc;
	THREADPOOL_WORKITEM_TYPE Type;
} ThreadPoolWorkItem;

[
	object,
	uuid(FF9B39EB-CCAC-4AA2-B3C4-63BDDFA0AC9F)
]
interface IEnumHashtableCallback : IUnknown
{
	HRESULT Callback(DctEntry ent);
}

[
	object,
	uuid(0DAE7AEF-6671-48A0-AB96-D90931862882)
]
interface IEnumThreadPoolCallback : IUnknown
{
	HRESULT Callback(AppDomainAndValue queue, ThreadPoolWorkItem item);
}

[
	object,
	uuid(1F0565EB-95CE-48DE-BC4A-54AD9C034A2C)
]
interface ISDbgExt : IUnknown
{
	HRESULT GetProcess(IClrProcess **proc);
	HRESULT GetObjectData(CLRDATA_ADDRESS objAddr, ClrObjectData *data);
	HRESULT EvaluateExpression(CLRDATA_ADDRESS rootObj, LPWSTR expression, CLRDATA_ADDRESS *result);
	HRESULT EnumerateHashtable([in] CLRDATA_ADDRESS dctObj, [in] IEnumHashtableCallback *cb);
	HRESULT EnumerateThreadPoolQueues([in] IEnumThreadPoolCallback *tpQueueCb);
};


#include "..\..\WinUnitBin\WinUnit.h"
#include "..\SDbgExt2\inc\SDbgCore.h"
#include "..\SDbgExt2\inc\ClrProcess.h"

FIXTURE(TestProcessFixture)

PROCESS_INFORMATION _pi;
ClrProcess *p;

BOOL StartTestProcess(PROCESS_INFORMATION *pi)
{
	ZeroMemory(pi, sizeof(PROCESS_INFORMATION));
	STARTUPINFO si = {0};
	si.cb = sizeof(STARTUPINFO);

	LPWSTR cmdLine = _tcsdup(L"Q:\\Dev\\SOSRevHelper\\SOSRevHelper\\bin\\Debug\\SOSRevHelper.exe");
	return CreateProcess(NULL, cmdLine, NULL, NULL, FALSE, 0, NULL, NULL, &si, pi);
}

SETUP(TestProcessFixture)
{
	CoInitialize(NULL);
	StartTestProcess(&_pi);
	Sleep(1000);

	CComPtr<IXCLRDataProcess3> chDac; CComPtr<IDacMemoryAccess> chDcma;
	InitRemoteProcess(_pi.dwProcessId, &chDac, &chDcma);
	ClrProcess *p = new ClrProcess(chDac, chDcma);
}

TEARDOWN(TestProcessFixture)
{
	//p->Release();

	TerminateProcess(_pi.hProcess, 0);
	CloseHandle(_pi.hProcess);
	CloseHandle(_pi.hThread);
}

BEGIN_TESTF(ClrThreadStoreData_ThreadCounts, TestProcessFixture)
{
	ClrThreadStoreData tsData = {};
	auto hr = p->GetProcess()->GetThreadStoreData(&tsData);

	WIN_ASSERT_TRUE(hr == S_OK);

	WIN_ASSERT_EQUAL(3, tsData.ThreadCount);
	WIN_ASSERT_EQUAL(1, tsData.BackgroundThreadCount);
}
END_TESTF